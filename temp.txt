Help on module django.shortcuts in django:

FUNCTIONS
    get_list_or_404(klass, *args, **kwargs)
        Uses filter() to return a list of objects, or raise a Http404 exception if
        the list is empty.

        klass may be a Model, Manager, or QuerySet object. All other passed
        arguments and keyword arguments are used in the filter() query.

    get_object_or_404(klass, *args, **kwargs)
        Uses get() to return an object, or raises a Http404 exception if the object
        does not exist.

        klass may be a Model, Manager, or QuerySet object. All other passed
        arguments and keyword arguments are used in the get() query.

        Note: Like with get(), an MultipleObjectsReturned will be raised if more than one
        object is found.

    redirect(to, *args, **kwargs)
        Returns an HttpResponseRedirect to the appropriate URL for the arguments
        passed.

        The arguments could be:

            * A model: the model's `get_absolute_url()` function will be called.

            * A view name, possibly with arguments: `urlresolvers.reverse()` will
              be used to reverse-resolve the name.

            * A URL, which will be used as-is for the redirect location.

        By default issues a temporary redirect; pass permanent=True to issue a
        permanent redirect

    render(request, template_name, context=None, context_instance=<object object at 0x000000B0C56AC670>, content_type=None, status=None, current_app=<object object at 0x000000B0C56AC640>, dirs=<object object at 0x000000B0C56AC690>, dictionary=<object object at 0x000000B0C56AC680>, using=None)
        Returns a HttpResponse whose content is filled with the result of calling
        django.template.loader.render_to_string() with the passed arguments.
        Uses a RequestContext by default.

    render_to_response(template_name, context=None, context_instance=<object object at 0x000000B0C56AC670>, content_type=None, status=None, dirs=<object object at 0x000000B0C56AC690>, dictionary=<object object at 0x000000B0C56AC680>, using=None)
        Returns a HttpResponse whose content is filled with the result of calling
        django.template.loader.render_to_string() with the passed arguments.

    resolve_url(to, *args, **kwargs)
        Return a URL appropriate for the arguments passed.

        The arguments could be:

            * A model: the model's `get_absolute_url()` function will be called.

            * A view name, possibly with arguments: `urlresolvers.reverse()` will
              be used to reverse-resolve the name.

            * A URL, which will be returned as-is.